'
'Example for DIGI_POT_3 Click
'
'    Date          : Apr 2018.
'    Author        : Nemanja Medakovic
'
'Test configuration AVR :
'    
'    MCU              : ATMEGA32
'    Dev. Board       : EasyAVR v7 
'    AVR Compiler ver : v7.0.1.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initializes peripherals and pins.
'- Application Initialization - Initializes SPI driver and restores the wiper position value from
'  EEMEM (non volatile) memory to the DAC register, if this value does not already exist in the DAC register.
'- Application Task - (code snippet) - Increments the wiper position by 6dB every 2 seconds. When wiper position
'  reaches the desired value (0x0200), then the wiper position be decremented by 6dB every 2 seconds, until position 
'  value reaches the new desired value (0x0002). After that the new position value will be stored to the EEMEM memory,
'  if that value does not already exist in the EEMEM memory.
'
'
program Click_DIGI_POT_3_AVR

include Click_DIGI_POT_3_types
include Click_DIGI_POT_3_config

dim
    digitalValue as uint16_t 
    eememValue as uint16_t 
    text as char[50] 
    
sub procedure systemInit() 

    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT) 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_AN_PIN, _GPIO_INPUT) 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT) 
    mikrobus_spiInit(_MIKROBUS1, @_DIGIPOT3_SPI_CFG[0]) 
    mikrobus_logInit(_LOG_USBUART, 9600) 
    mikrobus_logWrite("Initializing...", _LOG_LINE) 
    Delay_ms(100) 

end sub

sub procedure applicationInit() 

    digipot3_spiDriverInit(T_DIGIPOT3_P(@_MIKROBUS1_GPIO), T_DIGIPOT3_P(@_MIKROBUS1_SPI)) 
    Delay_ms(200) 
    digipot3_readDAC(@digitalValue) 
    digipot3_readEEMEM(_DIGIPOT3_RDAC_EEMEM_LOC, @eememValue) 
    if ((eememValue <> digitalValue)) then 
        digipot3_sendCommand(_DIGIPOT3_RESTORE_EEMEM_TO_RDAC_COMM) 
    end if
    mikrobus_logWrite("DIGI POT 3 is initialized", _LOG_LINE) 
    mikrobus_logWrite("", _LOG_LINE) 
    Delay_ms(200) 

end sub

sub procedure applicationTask() 

    while ((digitalValue < 0x0200)) 
        digipot3_sendCommand(_DIGIPOT3_INCREMENT_RDAC_6DB_COMM) 
        digipot3_readDAC(@digitalValue) 
        WordToStr(digitalValue, text) 
        mikrobus_logWrite("DAC value is: ", _LOG_TEXT) 
        mikrobus_logWrite(text, _LOG_LINE) 
        Delay_ms(2000) 
    wend
    while ((digitalValue > 0x0002)) 
        digipot3_sendCommand(_DIGIPOT3_DECREMENT_RDAC_6DB_COMM) 
        digipot3_readDAC(@digitalValue) 
        WordToStr(digitalValue, text) 
        mikrobus_logWrite("DAC value is: ", _LOG_TEXT) 
        mikrobus_logWrite(text, _LOG_LINE) 
        Delay_ms(2000) 
    wend
    if ((eememValue <> digitalValue)) then 
        digipot3_sendCommand(_DIGIPOT3_STORE_RDAC_TO_EEMEM_COMM) 
        eememValue = digitalValue 
    end if

end sub

main :
    text[0] = 0

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend

end.